# docker compose 에 대해 알아본다.
# 의의
#     여러 개의 Docker 컨테이너들을 하나의 묶음으로 관리할 수 있게 도와준다.
#     복잡한 Docker CLI 명령어와 Dockerfile 을 통합함
#
# 아래는 Docker CLI 로 nginx 컨테이너를 실행하는 예시이다. 이 예시와 동일한 기능을 하는 docker compose 를 작성해본다.
#     docker run --name webserver -d -p 80:80 nginx
#
services:
  my-web-server:
    container_name: webserver
    image: nginx
    ports:
      - 80:80

# 예시 설명
# Docker compose 에서는 하나의 컨테이너를 하나의 service 로 부른다.
#     이에 따라.. "services" 하위에 띄우고 싶은 여러 컨테이너를 선언할 수 있다.
# "my-web-server" 는 서비스의 이름이다.
#
# 서비스 요소
#     "container_name: webserver" 는 컨테이너 이름을 webserver 로 정한 것이다.
#     "image: nginx" 는 컨테이너를 실행 시킬때 어떤 이미지를 사용할 것인지 정한 것이다.
#     "ports" 는 컨테이너와 호스트의 포트 매핑을 어떻게 할 것인지 정한 것이다.
#     "environment" 는 docker CLI run 명령어의 -e 옵션과 동일
#     "volumes" 는 docker CLI run 명령어의 -v 옵션과 동일